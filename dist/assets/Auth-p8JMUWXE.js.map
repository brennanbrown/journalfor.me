{"version":3,"file":"Auth-p8JMUWXE.js","sources":["../../src/components/Auth.ts"],"sourcesContent":["import { appStore } from '../stores/AppStore'\n\n/**\n * Authentication components - Login and Register\n */\n\nexport function renderLogin(): void {\n  const mainContent = document.getElementById('main-content')\n  if (!mainContent) return\n  \n  mainContent.innerHTML = `\n    <div class=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div class=\"max-w-md w-full space-y-8\">\n        <div>\n          <div class=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-blue-100 dark:bg-blue-900\">\n            <i class=\"fas fa-book text-blue-600 dark:text-blue-400 text-xl\"></i>\n          </div>\n          <h2 class=\"mt-6 text-center text-3xl font-display font-bold text-gray-900 dark:text-gray-100\">\n            Welcome Back! üëã\n          </h2>\n          <p class=\"mt-2 text-center text-sm text-gray-600 dark:text-gray-400\">\n            Sign in to continue your journaling journey\n          </p>\n        </div>\n        \n        <form class=\"mt-8 space-y-6\" id=\"login-form\">\n          <div id=\"auth-error\" class=\"hidden p-3 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-700 rounded-lg\">\n            <div class=\"flex\">\n              <span class=\"text-red-400 mr-2\">‚ö†Ô∏è</span>\n              <p class=\"text-sm text-red-700 dark:text-red-300\" id=\"auth-error-message\"></p>\n            </div>\n          </div>\n          <div class=\"space-y-4\">\n            <div>\n              <label for=\"email\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Email address\n              </label>\n              <input \n                id=\"email\" \n                name=\"email\" \n                type=\"email\" \n                autocomplete=\"email\" \n                required \n                class=\"input-field mt-1\"\n                placeholder=\"Enter your email\"\n              >\n            </div>\n            \n            <div>\n              <label for=\"password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Master Password üîê\n              </label>\n              <input \n                id=\"password\" \n                name=\"password\" \n                type=\"password\" \n                autocomplete=\"current-password\" \n                required \n                class=\"input-field mt-1\"\n                placeholder=\"Enter your master password\"\n              >\n              <p class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                üõ°Ô∏è This decrypts your encrypted journal entries\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center\">\n              <input \n                id=\"remember-me\" \n                name=\"remember-me\" \n                type=\"checkbox\" \n                class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded\"\n              >\n              <label for=\"remember-me\" class=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                Remember me\n              </label>\n            </div>\n            \n            <div class=\"text-sm\">\n              <a href=\"#\" class=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\">\n                Forgot your password?\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <button \n              type=\"submit\" \n              id=\"login-submit\"\n              class=\"btn-primary w-full transform hover:scale-105 active:scale-95 transition-all duration-200\"\n            >\n              <span id=\"login-submit-text\">üöÄ Sign In</span>\n              <span id=\"login-loading\" class=\"hidden\">\n                <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Signing In...\n              </span>\n            </button>\n          </div>\n          \n          <div class=\"text-center\">\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">\n              Don't have an account?\n              <a href=\"/register\" class=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 ml-1\">\n                Sign up\n              </a>\n            </span>\n          </div>\n        </form>\n      </div>\n    </div>\n  `\n  \n  setupLoginForm()\n}\n\nexport function renderRegister(): void {\n  const mainContent = document.getElementById('main-content')\n  if (!mainContent) return\n  \n  mainContent.innerHTML = `\n    <div class=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div class=\"max-w-md w-full space-y-8\">\n        <div>\n          <div class=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-blue-100 dark:bg-blue-900\">\n            <i class=\"fas fa-user-plus text-blue-600 dark:text-blue-400 text-xl\"></i>\n          </div>\n          <h2 class=\"mt-6 text-center text-3xl font-display font-bold text-gray-900 dark:text-gray-100\">\n            Join Journal for Me ‚ú®\n          </h2>\n          <p class=\"mt-2 text-center text-sm text-gray-600 dark:text-gray-400\">\n            Start your personal journaling journey today\n          </p>\n        </div>\n        \n        <form class=\"mt-8 space-y-6\" id=\"register-form\">\n          <div id=\"register-error\" class=\"hidden p-3 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-700 rounded-lg\">\n            <div class=\"flex\">\n              <span class=\"text-red-400 mr-2\">‚ö†Ô∏è</span>\n              <p class=\"text-sm text-red-700 dark:text-red-300\" id=\"register-error-message\"></p>\n            </div>\n          </div>\n          <div class=\"space-y-4\">\n            <div>\n              <label for=\"email\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Email address\n              </label>\n              <input \n                id=\"email\" \n                name=\"email\" \n                type=\"email\" \n                autocomplete=\"email\" \n                required \n                class=\"input-field mt-1\"\n                placeholder=\"Enter your email\"\n              >\n            </div>\n            \n            <div>\n              <label for=\"password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Master Password üîê\n              </label>\n              <input \n                id=\"password\" \n                name=\"password\" \n                type=\"password\" \n                autocomplete=\"new-password\" \n                required \n                class=\"input-field mt-1\"\n                placeholder=\"Create a secure master password\"\n              >\n              <p class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                üõ°Ô∏è This encrypts all your journal entries locally. Keep it safe!\n              </p>\n            </div>\n            \n            <div>\n              <label for=\"confirm-password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Confirm password\n              </label>\n              <input \n                id=\"confirm-password\" \n                name=\"confirm-password\" \n                type=\"password\" \n                autocomplete=\"new-password\" \n                required \n                class=\"input-field mt-1\"\n                placeholder=\"Confirm your password\"\n              >\n            </div>\n          </div>\n          \n          <div class=\"flex items-center\">\n            <input \n              id=\"terms\" \n              name=\"terms\" \n              type=\"checkbox\" \n              required\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded\"\n            >\n            <label for=\"terms\" class=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n              I agree to the \n              <a href=\"#\" class=\"text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\">\n                Terms of Service\n              </a> and \n              <a href=\"#\" class=\"text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\">\n                Privacy Policy\n              </a>\n            </label>\n          </div>\n          \n          <div>\n            <button \n              type=\"submit\" \n              id=\"register-submit\"\n              class=\"btn-primary w-full transform hover:scale-105 active:scale-95 transition-all duration-200\"\n            >\n              <span id=\"register-submit-text\">‚ú® Create Account</span>\n              <span id=\"register-loading\" class=\"hidden\">\n                <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Creating Account...\n              </span>\n            </button>\n          </div>\n          \n          <div class=\"text-center\">\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">\n              Already have an account?\n              <a href=\"/login\" class=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 ml-1\">\n                Sign in\n              </a>\n            </span>\n          </div>\n        </form>\n      </div>\n    </div>\n  `\n  \n  setupRegisterForm()\n}\n\nfunction setupLoginForm(): void {\n  const form = document.getElementById('login-form') as HTMLFormElement\n  const submitButton = document.getElementById('login-submit') as HTMLButtonElement\n  const errorDiv = document.getElementById('auth-error') as HTMLDivElement\n  const errorMessage = document.getElementById('auth-error-message') as HTMLParagraphElement\n  const submitText = document.getElementById('login-submit-text') as HTMLSpanElement\n  const loadingSpinner = document.getElementById('login-loading') as HTMLSpanElement\n\n  form?.addEventListener('submit', async (event) => {\n    event.preventDefault()\n    \n    const formData = new FormData(form)\n    const email = formData.get('email') as string\n    const password = formData.get('password') as string\n    \n    // Hide previous errors\n    hideError()\n\n    // Validation\n    if (!email || !password) {\n      showError('Please fill in all required fields')\n      return\n    }\n\n    // Show loading state\n    setLoading(true)\n\n    try {\n      // First validate credentials to give specific error messages\n      const validation = await appStore.storage.validateUserCredentials(email, password)\n      \n      if (!validation.exists) {\n        showError('No account found with this email address. Please check your email or create a new account.')\n        return\n      }\n      \n      if (!validation.passwordValid) {\n        showError('Incorrect password. Please check your password and try again.')\n        return\n      }\n      \n      // Now initialize with validated credentials\n      await appStore.initialize(password)\n      \n      // Check if user is actually logged in\n      const state = appStore.getState()\n      if (!state.user) {\n        throw new Error('Login failed - initialization error')\n      }\n      \n      // If successful, navigate to dashboard\n      console.log('‚úÖ Login successful!', state.user.email)\n      \n      // Store session key for persistence\n      sessionStorage.setItem('journal-session-key', password)\n      localStorage.setItem('journal-user-email', email)\n      console.log('üíæ Session data stored for persistence')\n      \n      console.log('üß≠ Dispatching navigation to /')\n      window.dispatchEvent(new CustomEvent('navigate', { \n        detail: { path: '/', replace: true } \n      }))\n      \n      // Also try direct navigation as a fallback\n      setTimeout(() => {\n        if (window.location.pathname === '/login') {\n          console.log('üîÑ Fallback: manually changing location')\n          window.location.href = '/'\n        }\n      }, 100)\n    } catch (error) {\n      console.error('Login error:', error)\n      \n      if (error instanceof Error) {\n        showError(error.message)\n      } else {\n        showError('Login failed. Please try again.')\n      }\n    } finally {\n      setLoading(false)\n    }\n  })\n\n  function showError(message: string): void {\n    errorMessage.textContent = message\n    errorDiv.classList.remove('hidden')\n    errorDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n  }\n\n  function hideError(): void {\n    errorDiv.classList.add('hidden')\n  }\n\n  function setLoading(loading: boolean): void {\n    submitButton.disabled = loading\n    \n    if (loading) {\n      submitText.classList.add('hidden')\n      loadingSpinner.classList.remove('hidden')\n      submitButton.classList.add('opacity-75')\n    } else {\n      submitText.classList.remove('hidden')\n      loadingSpinner.classList.add('hidden')\n      submitButton.classList.remove('opacity-75')\n    }\n  }\n}\n\nfunction setupRegisterForm(): void {\n  const form = document.getElementById('register-form') as HTMLFormElement\n  const submitButton = document.getElementById('register-submit') as HTMLButtonElement\n  const errorDiv = document.getElementById('register-error') as HTMLDivElement\n  const errorMessage = document.getElementById('register-error-message') as HTMLParagraphElement\n  const submitText = document.getElementById('register-submit-text') as HTMLSpanElement\n  const loadingSpinner = document.getElementById('register-loading') as HTMLSpanElement\n\n  form?.addEventListener('submit', async (event) => {\n    event.preventDefault()\n    \n    const formData = new FormData(form)\n    const email = formData.get('email') as string\n    const password = formData.get('password') as string\n    const confirmPassword = formData.get('confirm-password') as string\n    \n    // Hide previous errors\n    hideError()\n\n    // Validation\n    if (!email || !password || !confirmPassword) {\n      showError('Please fill in all required fields')\n      return\n    }\n\n    if (password !== confirmPassword) {\n      showError('Passwords do not match')\n      return\n    }\n\n    if (password.length < 8) {\n      showError('Password must be at least 8 characters long')\n      return\n    }\n\n    // Show loading state\n    setLoading(true)\n\n    try {\n      // Check if user already exists\n      const storageManager = appStore.getStorageManager()\n      if (await storageManager.hasExistingUser()) {\n        // Try to get existing user to check email\n        try {\n          await storageManager.initialize(password)\n          const existingUser = await storageManager.getUser()\n          if (existingUser && existingUser.email === email) {\n            showError('An account with this email already exists. Please sign in instead.')\n            return\n          } else if (existingUser) {\n            showError('An account already exists with a different email. Please use a different email or sign in.')\n            return\n          }\n        } catch (error) {\n          // If password is wrong, that's fine - different user\n          console.log('Existing user has different password, proceeding with registration')\n        }\n      }\n      \n      // Create new user\n      const user = await appStore.createUser(email, password)\n      \n      // Verify user is set in store\n      const state = appStore.getState()\n      console.log('‚úÖ Account created successfully!', user.email)\n      console.log('üìä Current app state after registration:', { user: state.user?.email, entriesCount: state.entries.length })\n      \n      // Store session key for persistence\n      sessionStorage.setItem('journal-session-key', password)\n      console.log('üíæ Session key stored for persistence')\n      \n      console.log('üß≠ Dispatching navigation to /')\n      window.dispatchEvent(new CustomEvent('navigate', { \n        detail: { path: '/', replace: true } \n      }))\n      \n      // Also try direct navigation as a fallback\n      setTimeout(() => {\n        if (window.location.pathname === '/register') {\n          console.log('üîÑ Fallback: manually changing location')\n          window.location.href = '/'\n        }\n      }, 100)\n    } catch (error) {\n      console.error('Registration error:', error)\n      \n      if (error instanceof Error) {\n        showError(error.message)\n      } else {\n        showError('Account creation failed. Please try again.')\n      }\n    } finally {\n      setLoading(false)\n    }\n  })\n\n  function showError(message: string): void {\n    errorMessage.textContent = message\n    errorDiv.classList.remove('hidden')\n    errorDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n  }\n\n  function hideError(): void {\n    errorDiv.classList.add('hidden')\n  }\n\n  function setLoading(loading: boolean): void {\n    submitButton.disabled = loading\n    \n    if (loading) {\n      submitText.classList.add('hidden')\n      loadingSpinner.classList.remove('hidden')\n      submitButton.classList.add('opacity-75')\n    } else {\n      submitText.classList.remove('hidden')\n      loadingSpinner.classList.add('hidden')\n      submitButton.classList.remove('opacity-75')\n    }\n  }\n}\n"],"names":["renderLogin","mainContent","setupLoginForm","renderRegister","setupRegisterForm","form","submitButton","errorDiv","errorMessage","submitText","loadingSpinner","event","formData","email","password","hideError","showError","setLoading","validation","appStore","state","error","message","loading","confirmPassword","storageManager","existingUser","user"],"mappings":"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"}
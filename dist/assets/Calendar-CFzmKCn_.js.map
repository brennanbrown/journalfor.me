{"version":3,"file":"Calendar-CFzmKCn_.js","sources":["../../src/components/Calendar.ts"],"sourcesContent":["import { appStore } from '../stores/AppStore'\n\n/**\n * Calendar component - Visual overview of journal entries\n */\n\nlet currentDate = new Date()\n\nexport function renderCalendar(): void {\n  const mainContent = document.getElementById('main-content')\n  if (!mainContent) return\n  \n  mainContent.innerHTML = `\n    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <div class=\"mb-6 flex justify-between items-center\">\n        <h1 class=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Calendar</h1>\n        <div class=\"flex space-x-2\">\n          <button id=\"prev-month\" class=\"btn-ghost\">\n            <i class=\"fas fa-chevron-left\"></i>\n          </button>\n          <button id=\"today-btn\" class=\"btn-secondary\">Today</button>\n          <button id=\"next-month\" class=\"btn-ghost\">\n            <i class=\"fas fa-chevron-right\"></i>\n          </button>\n        </div>\n      </div>\n      \n      <div class=\"card\">\n        <div class=\"mb-6 text-center\">\n          <h2 id=\"current-month\" class=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\n            ${currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n          </h2>\n        </div>\n        \n        <!-- Calendar Grid -->\n        <div class=\"grid grid-cols-7 gap-1 mb-4\">\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Sun</div>\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Mon</div>\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Tue</div>\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Wed</div>\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Thu</div>\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Fri</div>\n          <div class=\"p-2 text-center text-sm font-medium text-gray-500 dark:text-gray-400\">Sat</div>\n        </div>\n        \n        <div id=\"calendar-grid\" class=\"calendar-grid grid grid-cols-7 gap-1\">\n          ${generateCalendarDays()}\n        </div>\n      </div>\n      \n      <!-- Legend -->\n      <div class=\"mt-6 card\">\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-4\">Legend</h3>\n        <div class=\"flex flex-wrap gap-4\">\n          <div class=\"flex items-center\">\n            <div class=\"w-4 h-4 bg-blue-500 rounded mr-2\"></div>\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">Has entry</span>\n          </div>\n          <div class=\"flex items-center\">\n            <div class=\"w-4 h-4 bg-green-500 rounded mr-2\"></div>\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">Multiple entries</span>\n          </div>\n          <div class=\"flex items-center\">\n            <div class=\"w-4 h-4 bg-yellow-500 rounded mr-2\"></div>\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">Favorite entry</span>\n          </div>\n          <div class=\"flex items-center\">\n            <div class=\"w-4 h-4 border-2 border-blue-500 rounded mr-2\"></div>\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">Today</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n  \n  setupCalendar()\n}\n\nfunction generateCalendarDays(): string {\n  const today = new Date()\n  const currentMonth = currentDate.getMonth()\n  const currentYear = currentDate.getFullYear()\n  \n  // Get first day of month and number of days\n  const firstDay = new Date(currentYear, currentMonth, 1)\n  const startDate = new Date(firstDay)\n  startDate.setDate(startDate.getDate() - firstDay.getDay())\n  \n  // Get entries from app store\n  const state = appStore.getState()\n  const entriesByDate = new Map<string, any[]>()\n  \n  // Group entries by date\n  state.entries.forEach(entry => {\n    const entryDate = new Date(entry.createdAt)\n    const dateKey = entryDate.toISOString().split('T')[0]\n    if (!entriesByDate.has(dateKey)) {\n      entriesByDate.set(dateKey, [])\n    }\n    entriesByDate.get(dateKey)!.push(entry)\n  })\n  \n  const days = []\n  const iterDate = new Date(startDate)\n  \n  // Generate 42 days (6 weeks)\n  for (let i = 0; i < 42; i++) {\n    const isCurrentMonth = iterDate.getMonth() === currentMonth\n    const isToday = iterDate.toDateString() === today.toDateString()\n    const dayNumber = iterDate.getDate()\n    const dateKey = iterDate.toISOString().split('T')[0]\n    \n    // Get real entry data for this date\n    const dayEntries = entriesByDate.get(dateKey) || []\n    const hasEntry = dayEntries.length > 0\n    const hasMultiple = dayEntries.length > 1\n    const isFavorite = dayEntries.some(entry => entry.isFavorite)\n    \n    let dayClass = 'calendar-day p-2 h-16 border border-gray-200 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors'\n    \n    if (!isCurrentMonth) {\n      dayClass += ' text-gray-400 dark:text-gray-500'\n    } else {\n      dayClass += ' text-gray-900 dark:text-gray-100'\n    }\n    \n    if (isToday) {\n      dayClass += ' ring-2 ring-blue-500 bg-blue-50 dark:bg-blue-900'\n    }\n    \n    if (hasEntry && isCurrentMonth) {\n      dayClass += ' has-entries'\n    }\n    \n    let indicator = ''\n    if (hasEntry && isCurrentMonth) {\n      if (isFavorite) {\n        indicator = '<div class=\"w-2 h-2 bg-yellow-500 rounded-full ml-auto\"></div>'\n      } else if (hasMultiple) {\n        indicator = '<div class=\"w-2 h-2 bg-green-500 rounded-full ml-auto\"></div>'\n      } else {\n        indicator = '<div class=\"w-2 h-2 bg-blue-500 rounded-full ml-auto\"></div>'\n      }\n    }\n    \n    days.push(`\n      <div class=\"${dayClass}\" data-date=\"${iterDate.toISOString().split('T')[0]}\">\n        <div class=\"flex justify-between items-start h-full\">\n          <span class=\"text-sm font-medium\">${dayNumber}</span>\n          ${indicator}\n        </div>\n      </div>\n    `)\n    \n    iterDate.setDate(iterDate.getDate() + 1)\n  }\n  \n  return days.join('')\n}\n\nfunction updateMonthDisplay(): void {\n  const monthDisplay = document.getElementById('current-month')\n  if (monthDisplay) {\n    monthDisplay.textContent = currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })\n  }\n}\n\nfunction updateCalendarGrid(): void {\n  const calendarGrid = document.getElementById('calendar-grid')\n  if (calendarGrid) {\n    calendarGrid.innerHTML = generateCalendarDays()\n    \n    // Re-attach event listeners to new calendar days\n    document.querySelectorAll('.calendar-day').forEach(day => {\n      day.addEventListener('click', (event) => {\n        const target = event.currentTarget as HTMLElement\n        const date = target.getAttribute('data-date')\n        if (date) {\n          const state = appStore.getState()\n          const dayEntries = state.entries.filter(entry => {\n            const entryDate = new Date(entry.createdAt)\n            return entryDate.toISOString().split('T')[0] === date\n          })\n          \n          if (dayEntries.length > 0) {\n            window.dispatchEvent(new CustomEvent('navigate', { \n              detail: { path: `/entry/${dayEntries[0].id}` } \n            }))\n          } else {\n            window.dispatchEvent(new CustomEvent('navigate', { \n              detail: { path: `/write?date=${date}` } \n            }))\n          }\n        }\n      })\n    })\n  }\n}\n\nfunction setupCalendar(): void {\n  // Calendar navigation\n  document.getElementById('prev-month')?.addEventListener('click', () => {\n    currentDate.setMonth(currentDate.getMonth() - 1)\n    updateMonthDisplay()\n    updateCalendarGrid()\n  })\n  \n  document.getElementById('next-month')?.addEventListener('click', () => {\n    currentDate.setMonth(currentDate.getMonth() + 1)\n    updateMonthDisplay()\n    updateCalendarGrid()\n  })\n  \n  document.getElementById('today-btn')?.addEventListener('click', () => {\n    currentDate = new Date()\n    updateMonthDisplay()\n    updateCalendarGrid()\n  })\n  \n  // Day click handlers\n  document.querySelectorAll('.calendar-day').forEach(day => {\n    day.addEventListener('click', (event) => {\n      const target = event.currentTarget as HTMLElement\n      const date = target.getAttribute('data-date')\n      if (date) {\n        // Check if there are entries for this date\n        const state = appStore.getState()\n        const dayEntries = state.entries.filter(entry => {\n          const entryDate = new Date(entry.createdAt)\n          return entryDate.toISOString().split('T')[0] === date\n        })\n        \n        if (dayEntries.length > 0) {\n          // Navigate to the first entry for this date\n          window.dispatchEvent(new CustomEvent('navigate', { \n            detail: { path: `/entry/${dayEntries[0].id}` } \n          }))\n        } else {\n          // Create new entry for this date\n          window.dispatchEvent(new CustomEvent('navigate', { \n            detail: { path: `/write?date=${date}` } \n          }))\n        }\n      }\n    })\n  })\n}\n"],"names":["currentDate","renderCalendar","mainContent","generateCalendarDays","setupCalendar","today","currentMonth","currentYear","firstDay","startDate","state","appStore","entriesByDate","entry","dateKey","days","iterDate","i","isCurrentMonth","isToday","dayNumber","dayEntries","hasEntry","hasMultiple","isFavorite","dayClass","indicator","updateMonthDisplay","monthDisplay","updateCalendarGrid","calendarGrid","day","event","date"],"mappings":"wCAMA,IAAIA,MAAkB,KAEf,SAASC,GAAuB,CACrC,MAAMC,EAAc,SAAS,eAAe,cAAc,EACrDA,IAELA,EAAY,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAkBZF,EAAY,mBAAmB,QAAS,CAAE,MAAO,OAAQ,KAAM,UAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAgB7EG,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BhCC,EAAA,EACF,CAEA,SAASD,GAA+B,CACtC,MAAME,MAAY,KACZC,EAAeN,EAAY,SAAA,EAC3BO,EAAcP,EAAY,YAAA,EAG1BQ,EAAW,IAAI,KAAKD,EAAaD,EAAc,CAAC,EAChDG,EAAY,IAAI,KAAKD,CAAQ,EACnCC,EAAU,QAAQA,EAAU,QAAA,EAAYD,EAAS,QAAQ,EAGzD,MAAME,EAAQC,EAAS,SAAA,EACjBC,MAAoB,IAG1BF,EAAM,QAAQ,QAAQG,GAAS,CAE7B,MAAMC,EADY,IAAI,KAAKD,EAAM,SAAS,EAChB,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EAC/CD,EAAc,IAAIE,CAAO,GAC5BF,EAAc,IAAIE,EAAS,EAAE,EAE/BF,EAAc,IAAIE,CAAO,EAAG,KAAKD,CAAK,CACxC,CAAC,EAED,MAAME,EAAO,CAAA,EACPC,EAAW,IAAI,KAAKP,CAAS,EAGnC,QAASQ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMC,EAAiBF,EAAS,SAAA,IAAeV,EACzCa,EAAUH,EAAS,aAAA,IAAmBX,EAAM,aAAA,EAC5Ce,EAAYJ,EAAS,QAAA,EACrBF,EAAUE,EAAS,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EAG7CK,EAAaT,EAAc,IAAIE,CAAO,GAAK,CAAA,EAC3CQ,EAAWD,EAAW,OAAS,EAC/BE,EAAcF,EAAW,OAAS,EAClCG,EAAaH,EAAW,KAAKR,GAASA,EAAM,UAAU,EAE5D,IAAIY,EAAW,6IAEVP,EAGHO,GAAY,oCAFZA,GAAY,oCAKVN,IACFM,GAAY,qDAGVH,GAAYJ,IACdO,GAAY,gBAGd,IAAIC,EAAY,GACZJ,GAAYJ,IACVM,EACFE,EAAY,iEACHH,EACTG,EAAY,gEAEZA,EAAY,gEAIhBX,EAAK,KAAK;AAAA,oBACMU,CAAQ,gBAAgBT,EAAS,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA;AAAA,8CAElCI,CAAS;AAAA,YAC3CM,CAAS;AAAA;AAAA;AAAA,KAGhB,EAEDV,EAAS,QAAQA,EAAS,QAAA,EAAY,CAAC,CACzC,CAEA,OAAOD,EAAK,KAAK,EAAE,CACrB,CAEA,SAASY,GAA2B,CAClC,MAAMC,EAAe,SAAS,eAAe,eAAe,EACxDA,IACFA,EAAa,YAAc5B,EAAY,mBAAmB,QAAS,CAAE,MAAO,OAAQ,KAAM,UAAW,EAEzG,CAEA,SAAS6B,GAA2B,CAClC,MAAMC,EAAe,SAAS,eAAe,eAAe,EACxDA,IACFA,EAAa,UAAY3B,EAAA,EAGzB,SAAS,iBAAiB,eAAe,EAAE,QAAQ4B,GAAO,CACxDA,EAAI,iBAAiB,QAAUC,GAAU,CAEvC,MAAMC,EADSD,EAAM,cACD,aAAa,WAAW,EAC5C,GAAIC,EAAM,CAER,MAAMZ,EADQV,EAAS,SAAA,EACE,QAAQ,OAAOE,GACpB,IAAI,KAAKA,EAAM,SAAS,EACzB,cAAc,MAAM,GAAG,EAAE,CAAC,IAAMoB,CAClD,EAEGZ,EAAW,OAAS,EACtB,OAAO,cAAc,IAAI,YAAY,WAAY,CAC/C,OAAQ,CAAE,KAAM,UAAUA,EAAW,CAAC,EAAE,EAAE,EAAA,CAAG,CAC9C,CAAC,EAEF,OAAO,cAAc,IAAI,YAAY,WAAY,CAC/C,OAAQ,CAAE,KAAM,eAAeY,CAAI,EAAA,CAAG,CACvC,CAAC,CAEN,CACF,CAAC,CACH,CAAC,EAEL,CAEA,SAAS7B,GAAsB,CAE7B,SAAS,eAAe,YAAY,GAAG,iBAAiB,QAAS,IAAM,CACrEJ,EAAY,SAASA,EAAY,SAAA,EAAa,CAAC,EAC/C2B,EAAA,EACAE,EAAA,CACF,CAAC,EAED,SAAS,eAAe,YAAY,GAAG,iBAAiB,QAAS,IAAM,CACrE7B,EAAY,SAASA,EAAY,SAAA,EAAa,CAAC,EAC/C2B,EAAA,EACAE,EAAA,CACF,CAAC,EAED,SAAS,eAAe,WAAW,GAAG,iBAAiB,QAAS,IAAM,CACpE7B,MAAkB,KAClB2B,EAAA,EACAE,EAAA,CACF,CAAC,EAGD,SAAS,iBAAiB,eAAe,EAAE,QAAQE,GAAO,CACxDA,EAAI,iBAAiB,QAAUC,GAAU,CAEvC,MAAMC,EADSD,EAAM,cACD,aAAa,WAAW,EAC5C,GAAIC,EAAM,CAGR,MAAMZ,EADQV,EAAS,SAAA,EACE,QAAQ,OAAOE,GACpB,IAAI,KAAKA,EAAM,SAAS,EACzB,cAAc,MAAM,GAAG,EAAE,CAAC,IAAMoB,CAClD,EAEGZ,EAAW,OAAS,EAEtB,OAAO,cAAc,IAAI,YAAY,WAAY,CAC/C,OAAQ,CAAE,KAAM,UAAUA,EAAW,CAAC,EAAE,EAAE,EAAA,CAAG,CAC9C,CAAC,EAGF,OAAO,cAAc,IAAI,YAAY,WAAY,CAC/C,OAAQ,CAAE,KAAM,eAAeY,CAAI,EAAA,CAAG,CACvC,CAAC,CAEN,CACF,CAAC,CACH,CAAC,CACH"}
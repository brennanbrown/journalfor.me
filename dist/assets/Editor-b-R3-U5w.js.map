{"version":3,"file":"Editor-b-R3-U5w.js","sources":["../../src/components/Editor.ts"],"sourcesContent":["import { appStore } from '../stores/AppStore'\n\n/**\n * Markdown Editor component\n */\n\nexport function renderEditor(entryId?: string): void {\n  const mainContent = document.getElementById('main-content')\n  if (!mainContent) return\n  \n  const isEditing = Boolean(entryId)\n  const currentEntryId = entryId // Capture entryId in scope\n  \n  mainContent.innerHTML = `\n    <div class=\"max-w-6xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <div class=\"mb-6 flex justify-between items-center\">\n        <h1 class=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n          ${isEditing ? 'Edit Entry' : 'New Entry'}\n        </h1>\n        <div class=\"flex space-x-3\">\n          <button id=\"save-btn\" class=\"btn-primary\">\n            <i class=\"fas fa-save mr-2\"></i>Save\n          </button>\n          <button id=\"cancel-btn\" class=\"btn-secondary\">\n            Cancel\n          </button>\n        </div>\n      </div>\n      \n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <!-- Editor Panel -->\n        <div class=\"card\">\n          <div class=\"mb-4\">\n            <label for=\"entry-title\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Title\n            </label>\n            <input \n              type=\"text\" \n              id=\"entry-title\" \n              class=\"input-field\" \n              placeholder=\"Enter your entry title...\"\n              value=\"${isEditing ? 'Sample Entry Title' : ''}\"\n            >\n          </div>\n          \n          <div class=\"mb-4\">\n            <label for=\"entry-content\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Content\n            </label>\n            <textarea \n              id=\"editor-textarea\" \n              rows=\"20\" \n              class=\"input-field font-mono text-sm\" \n              placeholder=\"Start writing your thoughts...\"\n            >${isEditing ? 'This is a sample entry content in **Markdown** format.\\n\\n## Today was interesting\\n\\nI learned about:\\n- TypeScript\\n- PWAs\\n- IndexedDB\\n\\nOverall a productive day!' : ''}</textarea>\n          </div>\n          \n          <div class=\"flex justify-between items-center text-sm text-gray-500 dark:text-gray-400\">\n            <span id=\"word-count\">0 words</span>\n            <span id=\"auto-save-status\">All changes saved</span>\n          </div>\n        </div>\n        \n        <!-- Preview Panel -->\n        <div class=\"card\">\n          <div class=\"mb-4 flex justify-between items-center\">\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-gray-100\">Preview</h3>\n            <button id=\"fullscreen-btn\" class=\"btn-ghost text-sm\">\n              <i class=\"fas fa-expand mr-1\"></i>Fullscreen\n            </button>\n          </div>\n          \n          <div id=\"editor-preview\" class=\"prose dark:prose-invert max-w-none\">\n            ${isEditing ? \n              '<h1>Sample Entry Title</h1><p>This is a sample entry content in <strong>Markdown</strong> format.</p><h2>Today was interesting</h2><p>I learned about:</p><ul><li>TypeScript</li><li>PWAs</li><li>IndexedDB</li></ul><p>Overall a productive day!</p>' :\n              '<p class=\"text-gray-400 italic\">Preview will appear here as you type...</p>'\n            }\n          </div>\n        </div>\n      </div>\n      \n      <!-- Entry Metadata -->\n      <div class=\"mt-6 card\">\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-4\">Entry Settings</h3>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label for=\"entry-tags\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Tags (comma-separated)\n            </label>\n            <input \n              type=\"text\" \n              id=\"entry-tags\" \n              class=\"input-field\" \n              placeholder=\"personal, reflection, coding\"\n              value=\"${isEditing ? 'personal, coding, learning' : ''}\"\n            >\n          </div>\n          \n          <div class=\"flex items-center\">\n            <input \n              type=\"checkbox\" \n              id=\"entry-favorite\" \n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded\"\n              ${isEditing ? 'checked' : ''}\n            >\n            <label for=\"entry-favorite\" class=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n              Mark as favorite\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n  \n  setupEditor(currentEntryId)\n}\n\nfunction setupEditor(entryId?: string): void {\n  const titleInput = document.getElementById('entry-title') as HTMLInputElement\n  const contentTextarea = document.getElementById('editor-textarea') as HTMLTextAreaElement\n  const previewContent = document.getElementById('editor-preview') as HTMLDivElement\n  const wordCountSpan = document.getElementById('word-count') as HTMLSpanElement\n  const autoSaveStatus = document.getElementById('auto-save-status') as HTMLSpanElement\n  \n  // Update word count\n  function updateWordCount(): void {\n    const content = contentTextarea.value\n    const words = content.trim() ? content.trim().split(/\\s+/).length : 0\n    wordCountSpan.textContent = `${words} words`\n  }\n  \n  // Update preview with improved markdown parsing\n  function updatePreview(): void {\n    const content = contentTextarea.value\n    if (!content.trim()) {\n      previewContent.innerHTML = '<p class=\"text-gray-400 italic\">Preview will appear here as you type...</p>'\n      return\n    }\n    \n    // Improved markdown parsing with proper order and styling\n    let html = content\n    \n    // First, handle code blocks (to protect them from other processing)\n    html = html.replace(/```([\\s\\S]*?)```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 p-3 rounded text-sm font-mono overflow-x-auto\"><code>$1</code></pre>')\n    html = html.replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 px-1 rounded text-sm font-mono\">$1</code>')\n    \n    // Handle headings (before other formatting)\n    html = html.replace(/^### (.+)$/gm, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-gray-100\">$1</h3>')\n    html = html.replace(/^## (.+)$/gm, '<h2 class=\"text-xl font-bold mt-6 mb-3 text-gray-900 dark:text-gray-100\">$1</h2>')\n    html = html.replace(/^# (.+)$/gm, '<h1 class=\"text-2xl font-bold mt-8 mb-4 text-gray-900 dark:text-gray-100\">$1</h1>')\n    \n    // Handle lists (before paragraph processing)\n    const lines = html.split('\\n')\n    let inList = false\n    let processedLines = []\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i]\n      const isListItem = /^[-*+] (.+)$/.test(line.trim())\n      \n      if (isListItem && !inList) {\n        processedLines.push('<ul class=\"list-disc list-inside space-y-1 my-3 text-gray-700 dark:text-gray-300\">')\n        inList = true\n      } else if (!isListItem && inList) {\n        processedLines.push('</ul>')\n        inList = false\n      }\n      \n      if (isListItem) {\n        const listContent = line.replace(/^[-*+] (.+)$/, '$1')\n        processedLines.push(`<li class=\"ml-4\">${listContent}</li>`)\n      } else {\n        processedLines.push(line)\n      }\n    }\n    \n    if (inList) {\n      processedLines.push('</ul>')\n    }\n    \n    html = processedLines.join('\\n')\n    \n    // Handle text formatting (bold, italic)\n    html = html.replace(/\\*\\*\\*(.+?)\\*\\*\\*/g, '<strong class=\"font-bold\"><em class=\"italic\">$1</em></strong>')\n    html = html.replace(/\\*\\*(.+?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\n    html = html.replace(/\\*(.+?)\\*/g, '<em class=\"italic\">$1</em>')\n    \n    // Handle links\n    html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" class=\"text-blue-600 dark:text-blue-400 hover:underline\" target=\"_blank\">$1</a>')\n    \n    // Handle paragraphs (split by double newlines, but avoid wrapping headings and lists)\n    const paragraphs = html.split(/\\n\\s*\\n/)\n    const processedParagraphs = paragraphs.map(para => {\n      const trimmed = para.trim()\n      if (!trimmed) return ''\n      \n      // Don't wrap headings, lists, or code blocks in paragraphs\n      if (trimmed.startsWith('<h') || trimmed.startsWith('<ul') || \n          trimmed.startsWith('<pre') || trimmed.includes('</h') || \n          trimmed.includes('</ul>') || trimmed.includes('</pre>')) {\n        return trimmed\n      }\n      \n      return `<p class=\"mb-3 text-gray-700 dark:text-gray-300 leading-relaxed\">${trimmed}</p>`\n    })\n    \n    html = processedParagraphs.filter(p => p).join('\\n')\n    \n    previewContent.innerHTML = html\n  }\n  \n  // Event listeners\n  contentTextarea?.addEventListener('input', () => {\n    updateWordCount()\n    updatePreview()\n    autoSaveStatus.textContent = 'Saving...'\n    \n    // Simulate auto-save\n    setTimeout(() => {\n      autoSaveStatus.textContent = 'All changes saved'\n    }, 1000)\n  })\n  \n  titleInput?.addEventListener('input', () => {\n    autoSaveStatus.textContent = 'Saving...'\n    setTimeout(() => {\n      autoSaveStatus.textContent = 'All changes saved'\n    }, 1000)\n  })\n  \n  // Save button\n  document.getElementById('save-btn')?.addEventListener('click', async () => {\n    console.log('Saving entry...', { entryId, isEditing: Boolean(entryId) })\n    \n    const title = titleInput?.value.trim()\n    const content = contentTextarea?.value.trim()\n    const tagsInput = document.getElementById('entry-tags') as HTMLInputElement\n    const favoriteCheckbox = document.getElementById('entry-favorite') as HTMLInputElement\n    \n    if (!title || !content) {\n      alert('Please enter both a title and content for your entry.')\n      return\n    }\n    \n    // Update save status\n    autoSaveStatus.textContent = 'Saving...'\n    const saveBtn = document.getElementById('save-btn') as HTMLButtonElement\n    const originalText = saveBtn.innerHTML\n    saveBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin mr-2\"></i>Saving...'\n    saveBtn.disabled = true\n    \n    try {\n      // Parse tags from input field\n      const tagsFromInput = tagsInput?.value\n        .split(',')\n        .map(tag => tag.trim().toLowerCase())\n        .filter(tag => tag.length > 0) || []\n      \n      // Also extract hashtags from content\n      const hashtagMatches = content.match(/#\\w+/g) || []\n      const hashtagsFromContent = hashtagMatches.map(tag => tag.substring(1).toLowerCase())\n      \n      // Combine and deduplicate tags\n      const allTags = [...new Set([...tagsFromInput, ...hashtagsFromContent])]\n      \n      const isFavorite = favoriteCheckbox?.checked || false\n      \n      let result\n      if (entryId) {\n        // Update existing entry\n        result = await appStore.updateEntry(entryId, { \n          title, \n          content, \n          tags: allTags,\n          isFavorite \n        })\n        console.log('✅ Entry updated successfully!', result)\n      } else {\n        // Create new entry\n        result = await appStore.createEntry(title, content, allTags)\n        if (isFavorite && result) {\n          await appStore.toggleFavorite(result.id)\n        }\n        console.log('✅ Entry created successfully!', result)\n      }\n      \n      // Update save status\n      autoSaveStatus.textContent = 'All changes saved'\n      \n      // Navigate back to dashboard\n      window.dispatchEvent(new CustomEvent('navigate', { \n        detail: { path: '/' } \n      }))\n      \n    } catch (error) {\n      console.error('Error saving entry:', error)\n      autoSaveStatus.textContent = 'Save failed'\n      alert(`Failed to save entry: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      // Restore save button\n      saveBtn.innerHTML = originalText\n      saveBtn.disabled = false\n    }\n  })\n  \n  // Cancel button\n  document.getElementById('cancel-btn')?.addEventListener('click', () => {\n    if (confirm('Are you sure you want to discard changes?')) {\n      window.dispatchEvent(new CustomEvent('navigate', { detail: { path: '/' } }))\n    }\n  })\n  \n  // Fullscreen toggle\n  document.getElementById('fullscreen-btn')?.addEventListener('click', () => {\n    // TODO: Implement fullscreen mode\n    console.log('Toggle fullscreen')\n  })\n  \n  // Initial updates\n  updateWordCount()\n  updatePreview()\n}\n"],"names":["renderEditor","entryId","mainContent","isEditing","currentEntryId","setupEditor","titleInput","contentTextarea","previewContent","wordCountSpan","autoSaveStatus","updateWordCount","content","words","updatePreview","html","lines","inList","processedLines","i","line","isListItem","listContent","para","trimmed","p","title","tagsInput","favoriteCheckbox","saveBtn","originalText","tagsFromInput","tag","hashtagsFromContent","allTags","isFavorite","result","appStore","error"],"mappings":"wCAMO,SAASA,EAAaC,EAAwB,CACnD,MAAMC,EAAc,SAAS,eAAe,cAAc,EAC1D,GAAI,CAACA,EAAa,OAElB,MAAMC,EAAY,EAAQF,EACpBG,EAAiBH,EAEvBC,EAAY,UAAY;AAAA;AAAA;AAAA;AAAA,YAIdC,EAAY,aAAe,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwB3BA,EAAY,qBAAuB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAa7CA,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2K,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAmB1LA,EACA,wPACA,6EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmBWA,EAAY,6BAA+B,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASpDA,EAAY,UAAY,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWxCE,EAAYD,CAAc,CAC5B,CAEA,SAASC,EAAYJ,EAAwB,CAC3C,MAAMK,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAkB,SAAS,eAAe,iBAAiB,EAC3DC,EAAiB,SAAS,eAAe,gBAAgB,EACzDC,EAAgB,SAAS,eAAe,YAAY,EACpDC,EAAiB,SAAS,eAAe,kBAAkB,EAGjE,SAASC,GAAwB,CAC/B,MAAMC,EAAUL,EAAgB,MAC1BM,EAAQD,EAAQ,KAAA,EAASA,EAAQ,OAAO,MAAM,KAAK,EAAE,OAAS,EACpEH,EAAc,YAAc,GAAGI,CAAK,QACtC,CAGA,SAASC,GAAsB,CAC7B,MAAMF,EAAUL,EAAgB,MAChC,GAAI,CAACK,EAAQ,OAAQ,CACnBJ,EAAe,UAAY,8EAC3B,MACF,CAGA,IAAIO,EAAOH,EAGXG,EAAOA,EAAK,QAAQ,oBAAqB,+GAA+G,EACxJA,EAAOA,EAAK,QAAQ,aAAc,qFAAqF,EAGvHA,EAAOA,EAAK,QAAQ,eAAgB,sFAAsF,EAC1HA,EAAOA,EAAK,QAAQ,cAAe,kFAAkF,EACrHA,EAAOA,EAAK,QAAQ,aAAc,mFAAmF,EAGrH,MAAMC,EAAQD,EAAK,MAAM;AAAA,CAAI,EAC7B,IAAIE,EAAS,GACTC,EAAiB,CAAA,EAErB,QAASC,EAAI,EAAGA,EAAIH,EAAM,OAAQG,IAAK,CACrC,MAAMC,EAAOJ,EAAMG,CAAC,EACdE,EAAa,eAAe,KAAKD,EAAK,MAAM,EAUlD,GARIC,GAAc,CAACJ,GACjBC,EAAe,KAAK,oFAAoF,EACxGD,EAAS,IACA,CAACI,GAAcJ,IACxBC,EAAe,KAAK,OAAO,EAC3BD,EAAS,IAGPI,EAAY,CACd,MAAMC,EAAcF,EAAK,QAAQ,eAAgB,IAAI,EACrDF,EAAe,KAAK,oBAAoBI,CAAW,OAAO,CAC5D,MACEJ,EAAe,KAAKE,CAAI,CAE5B,CAEIH,GACFC,EAAe,KAAK,OAAO,EAG7BH,EAAOG,EAAe,KAAK;AAAA,CAAI,EAG/BH,EAAOA,EAAK,QAAQ,qBAAsB,+DAA+D,EACzGA,EAAOA,EAAK,QAAQ,iBAAkB,uCAAuC,EAC7EA,EAAOA,EAAK,QAAQ,aAAc,4BAA4B,EAG9DA,EAAOA,EAAK,QAAQ,2BAA4B,8FAA8F,EAkB9IA,EAfmBA,EAAK,MAAM,SAAS,EACA,IAAIQ,GAAQ,CACjD,MAAMC,EAAUD,EAAK,KAAA,EACrB,OAAKC,EAGDA,EAAQ,WAAW,IAAI,GAAKA,EAAQ,WAAW,KAAK,GACpDA,EAAQ,WAAW,MAAM,GAAKA,EAAQ,SAAS,KAAK,GACpDA,EAAQ,SAAS,OAAO,GAAKA,EAAQ,SAAS,QAAQ,EACjDA,EAGF,oEAAoEA,CAAO,OAT7D,EAUvB,CAAC,EAE0B,OAAOC,GAAKA,CAAC,EAAE,KAAK;AAAA,CAAI,EAEnDjB,EAAe,UAAYO,CAC7B,CAGAR,GAAiB,iBAAiB,QAAS,IAAM,CAC/CI,EAAA,EACAG,EAAA,EACAJ,EAAe,YAAc,YAG7B,WAAW,IAAM,CACfA,EAAe,YAAc,mBAC/B,EAAG,GAAI,CACT,CAAC,EAEDJ,GAAY,iBAAiB,QAAS,IAAM,CAC1CI,EAAe,YAAc,YAC7B,WAAW,IAAM,CACfA,EAAe,YAAc,mBAC/B,EAAG,GAAI,CACT,CAAC,EAGD,SAAS,eAAe,UAAU,GAAG,iBAAiB,QAAS,SAAY,CACzE,QAAQ,IAAI,kBAAmB,CAAE,QAAAT,EAAS,UAAW,EAAQA,EAAU,EAEvE,MAAMyB,EAAQpB,GAAY,MAAM,KAAA,EAC1BM,EAAUL,GAAiB,MAAM,KAAA,EACjCoB,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAmB,SAAS,eAAe,gBAAgB,EAEjE,GAAI,CAACF,GAAS,CAACd,EAAS,CACtB,MAAM,uDAAuD,EAC7D,MACF,CAGAF,EAAe,YAAc,YAC7B,MAAMmB,EAAU,SAAS,eAAe,UAAU,EAC5CC,EAAeD,EAAQ,UAC7BA,EAAQ,UAAY,uDACpBA,EAAQ,SAAW,GAEnB,GAAI,CAEF,MAAME,EAAgBJ,GAAW,MAC9B,MAAM,GAAG,EACT,OAAWK,EAAI,KAAA,EAAO,YAAA,CAAa,EACnC,OAAOA,GAAOA,EAAI,OAAS,CAAC,GAAK,CAAA,EAI9BC,GADiBrB,EAAQ,MAAM,OAAO,GAAK,CAAA,GACN,IAAIoB,GAAOA,EAAI,UAAU,CAAC,EAAE,aAAa,EAG9EE,EAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAGH,EAAe,GAAGE,CAAmB,CAAC,CAAC,EAEjEE,EAAaP,GAAkB,SAAW,GAEhD,IAAIQ,EACAnC,GAEFmC,EAAS,MAAMC,EAAS,YAAYpC,EAAS,CAC3C,MAAAyB,EACA,QAAAd,EACA,KAAMsB,EACN,WAAAC,CAAA,CACD,EACD,QAAQ,IAAI,gCAAiCC,CAAM,IAGnDA,EAAS,MAAMC,EAAS,YAAYX,EAAOd,EAASsB,CAAO,EACvDC,GAAcC,GAChB,MAAMC,EAAS,eAAeD,EAAO,EAAE,EAEzC,QAAQ,IAAI,gCAAiCA,CAAM,GAIrD1B,EAAe,YAAc,oBAG7B,OAAO,cAAc,IAAI,YAAY,WAAY,CAC/C,OAAQ,CAAE,KAAM,GAAA,CAAI,CACrB,CAAC,CAEJ,OAAS4B,EAAO,CACd,QAAQ,MAAM,sBAAuBA,CAAK,EAC1C5B,EAAe,YAAc,cAC7B,MAAM,yBAAyB4B,aAAiB,MAAQA,EAAM,QAAU,eAAe,EAAE,CAC3F,QAAA,CAEET,EAAQ,UAAYC,EACpBD,EAAQ,SAAW,EACrB,CACF,CAAC,EAGD,SAAS,eAAe,YAAY,GAAG,iBAAiB,QAAS,IAAM,CACjE,QAAQ,2CAA2C,GACrD,OAAO,cAAc,IAAI,YAAY,WAAY,CAAE,OAAQ,CAAE,KAAM,GAAA,CAAI,CAAG,CAAC,CAE/E,CAAC,EAGD,SAAS,eAAe,gBAAgB,GAAG,iBAAiB,QAAS,IAAM,CAEzE,QAAQ,IAAI,mBAAmB,CACjC,CAAC,EAGDlB,EAAA,EACAG,EAAA,CACF"}